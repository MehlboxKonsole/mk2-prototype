/*
 * This file is part of MehlboxKonsole2.
 *
 *     MehlboxKonsole2 is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Affero General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     MehlboxKonsole2 is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Affero General Public License for more details.
 *
 *     You should have received a copy of the GNU Affero General Public License
 *     along with MehlboxKonsole2.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
	id "java"
	id "org.springframework.boot" version "2.4.2"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id("se.patrikerdes.use-latest-versions") version "0.2.15"
	id ("com.github.ben-manes.versions") version "0.36.0"
	id ("com.github.node-gradle.node") version "2.2.4"
}

archivesBaseName = "mk2-prototype"
version = "0.3.2"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

clean.doLast {
	file("src/main/resources/static/generated").deleteDir()
}

sourceSets {
	main {
		resources {
			exclude "**/sass/**"
		}
	}
}

dependencies {
	compile(
			"org.springframework.boot:spring-boot-starter-web",
			"org.springframework.boot:spring-boot-starter-actuator",
			"org.springframework.boot:spring-boot-starter-security",
			"org.springframework.boot:spring-boot-starter-thymeleaf",
			"org.springframework.security:spring-security-ldap",
			"org.springframework.ldap:spring-ldap-core",
			'org.springframework.boot:spring-boot-starter-validation',

			"org.thymeleaf.extras:thymeleaf-extras-springsecurity5",
			"nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect",

			"org.springframework:spring-tx",

			"javax.inject:javax.inject:1",
	)

	annotationProcessor(
			"org.springframework.boot:spring-boot-configuration-processor"
	)

	runtime(
			"org.springframework.boot:spring-boot-properties-migrator",
			"org.springframework.boot:spring-boot-devtools",
	)

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.0")
	testImplementation("org.mockito:mockito-core:3.7.7")
}

task generateSass(type: NpxTask) {
	dependsOn("npmInstall")
	command = "node-sass"
	args = ["src/main/resources/sass/mk2.scss", "src/main/resources/static/generated/mk2.css"]
}

test {
	useJUnitPlatform()
}

